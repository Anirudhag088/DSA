package Assignment_DP;

public class zero_one_Knapsack {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
         int [] values = {15,14,10,45,30};
         int [] weight = {2,5,1,3,4};
         int cap = 7;
         
         System.out.println(maximum(values, weight, cap));
	}
	public static int maximum(int[] values, int[] weight, int cap) {
		int [][] dp = new int [values.length+1][cap+1];
		
		for(int i = 1; i < dp.length; i++) {
			for(int j = 1; j < dp[0].length; j++) {
				
				int no = dp[i-1][j];
				int yes = (j - weight[i-1] < 0) ? 0 : dp[i-1][j- weight[i-1]] + values[i-1]; 
				
//				 if(j - weight[i-1] < 0) {
//					int yes = 0; 
//					dp[i][j] = Math.max(no, yes); 
//				 }else {
//					int yes = dp[i-1][j- weight[i-1]] + values[i-1]; 
//					dp[i][j] = Math.max(no, yes); 
//				 }
				dp[i][j] = Math.max(no, yes); 
				 
			}
		}
		return dp[dp.length-1][dp[0].length-1];
		
	}

}
